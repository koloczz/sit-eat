// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SitEat.Data;

namespace SitEat.Migrations
{
    [DbContext(typeof(SitEatContext))]
    [Migration("20211115135145_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantTag", b =>
                {
                    b.Property<int>("RestaurantsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RestaurantTag");
                });

            modelBuilder.Entity("SitEat.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeStart")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("SitEat.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("RestaurantId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Item-R1-A",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Item-R1-B",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Item-R1-C",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Item-R1-D",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Item-R1-E",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Item-R1-F",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Item-R1-G",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Item-R1-H",
                            Price = 1.23m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Item-R2-A",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "Item-R2-B",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "Item-R2-C",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "Item-R2-D",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 13,
                            Name = "Item-R2-E",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 14,
                            Name = "Item-R2-F",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 15,
                            Name = "Item-R2-G",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "Item-R2-H",
                            Price = 10.23m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 17,
                            Name = "Item-R3-A",
                            Price = 100.23m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 18,
                            Name = "Item-R3-B",
                            Price = 100.23m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 19,
                            Name = "Item-R3-C",
                            Price = 100.23m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "Item-R3-D",
                            Price = 100.23m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 21,
                            Name = "Item-R3-E",
                            Price = 100.23m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 22,
                            Name = "Item-R3-F",
                            Price = 100.23m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 23,
                            Name = "Item-R3-G",
                            Price = 100.23m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 24,
                            Name = "Item-R3-H",
                            Price = 100.23m,
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("SitEat.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningTimes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum blah blah blah",
                            ImagePath = "",
                            Name = "Marco Polo",
                            OpeningTimes = ""
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum blah blah blah",
                            ImagePath = "",
                            Name = "Restaurant number 2",
                            OpeningTimes = ""
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum blah blah blah",
                            ImagePath = "",
                            Name = "Family Place",
                            OpeningTimes = ""
                        });
                });

            modelBuilder.Entity("SitEat.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestaurantId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Arnold",
                            RestaurantId = 1,
                            Score = 1,
                            Text = "It sucks!"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Bernard",
                            RestaurantId = 1,
                            Score = 5,
                            Text = "Great place, would certainly eat at again."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Ciril",
                            RestaurantId = 1,
                            Score = 3,
                            Text = "If only they had more variety. The quality is decent but I got bored of their food already."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Dionisius",
                            RestaurantId = 1,
                            Score = 2,
                            Text = "Meh."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Ergon",
                            RestaurantId = 1,
                            Score = 5,
                            Text = "I love this place! <3"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Fred",
                            RestaurantId = 1,
                            Score = 4,
                            Text = "Decent food. Pretty cheap too."
                        },
                        new
                        {
                            Id = 7,
                            Author = "Gregory",
                            RestaurantId = 2,
                            Score = 5,
                            Text = "Just wonderful!"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Helga",
                            RestaurantId = 2,
                            Score = 1,
                            Text = "I'm not saying that this place sells s***, but I wouldn't eat it again."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Ian",
                            RestaurantId = 2,
                            Score = 3,
                            Text = "Not great, not terrible"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Jeremy",
                            RestaurantId = 2,
                            Score = 5,
                            Text = "Truly amazing place, never ate such good food"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Karol",
                            RestaurantId = 2,
                            Score = 5,
                            Text = "I enjoyed every bit of it!"
                        });
                });

            modelBuilder.Entity("SitEat.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NumberOfSits")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PositionX")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PositionY")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("SitEat.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Greek"
                        },
                        new
                        {
                            Id = 2,
                            Text = "Pizzeria"
                        },
                        new
                        {
                            Id = 3,
                            Text = "Vegetarian"
                        },
                        new
                        {
                            Id = 4,
                            Text = "Chinese"
                        },
                        new
                        {
                            Id = 5,
                            Text = "Vietnamese"
                        });
                });

            modelBuilder.Entity("RestaurantTag", b =>
                {
                    b.HasOne("SitEat.Models.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SitEat.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SitEat.Models.Booking", b =>
                {
                    b.HasOne("SitEat.Models.Table", null)
                        .WithMany("Bookings")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SitEat.Models.MenuItem", b =>
                {
                    b.HasOne("SitEat.Models.Restaurant", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SitEat.Models.Review", b =>
                {
                    b.HasOne("SitEat.Models.Restaurant", null)
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SitEat.Models.Table", b =>
                {
                    b.HasOne("SitEat.Models.Restaurant", null)
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SitEat.Models.Restaurant", b =>
                {
                    b.Navigation("MenuItems");

                    b.Navigation("Reviews");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("SitEat.Models.Table", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
